{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "21995dfd_4efd94f1",
        "filename": "src/bootimg.rs",
        "patchSetId": 5
      },
      "lineNbr": 60,
      "author": {
        "id": 2029650
      },
      "writtenOn": "2023-10-04T00:06:49Z",
      "side": 1,
      "message": "Probably a good idea to implement `Display` trait for `BootError`.",
      "range": {
        "startLine": 49,
        "startChar": 0,
        "endLine": 60,
        "endChar": 1
      },
      "revId": "4f4345206082874f6ed646081cc6918c01efdad1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "19741fc1_8074d539",
        "filename": "src/bootimg.rs",
        "patchSetId": 5
      },
      "lineNbr": 60,
      "author": {
        "id": 2029635
      },
      "writtenOn": "2023-10-04T20:47:37Z",
      "side": 1,
      "message": "I don\u0027t think it\u0027s possibly to implement `Display` in a nostd environment.",
      "parentUuid": "21995dfd_4efd94f1",
      "range": {
        "startLine": 49,
        "startChar": 0,
        "endLine": 60,
        "endChar": 1
      },
      "revId": "4f4345206082874f6ed646081cc6918c01efdad1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "12fb511a_8ede5633",
        "filename": "src/bootimg.rs",
        "patchSetId": 5
      },
      "lineNbr": 60,
      "author": {
        "id": 2029650
      },
      "writtenOn": "2023-10-04T21:04:48Z",
      "side": 1,
      "message": "Here is core Display trait: [core/fmt/trait.Display](https://doc.rust-lang.org/beta/core/fmt/trait.Display.html)\n\nProbably something like this\n```\nimpl Display for Test {\n    fn fmt(\u0026self, f: \u0026mut Formatter\u003c\u0027_\u003e) -\u003e core::fmt::Result {\n        let str \u003d match self {\n            Test::Value \u003d\u003e \"Some string for Value\",\n        };\n        write!(f, \"{str}\")\n    }\n}\n```",
      "parentUuid": "19741fc1_8074d539",
      "range": {
        "startLine": 49,
        "startChar": 0,
        "endLine": 60,
        "endChar": 1
      },
      "revId": "4f4345206082874f6ed646081cc6918c01efdad1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2fe408ee_a2011328",
        "filename": "src/bootimg.rs",
        "patchSetId": 5
      },
      "lineNbr": 190,
      "author": {
        "id": 2029650
      },
      "writtenOn": "2023-10-04T00:06:49Z",
      "side": 1,
      "message": "Can we add `UnsupportedVersion\u0027 for values 1..2? It would be clearer and we might need to differentiate between unknown and unsupported versions.",
      "range": {
        "startLine": 176,
        "startChar": 8,
        "endLine": 190,
        "endChar": 9
      },
      "revId": "4f4345206082874f6ed646081cc6918c01efdad1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2575ebd1_c3260e28",
        "filename": "src/bootimg.rs",
        "patchSetId": 5
      },
      "lineNbr": 190,
      "author": {
        "id": 2029635
      },
      "writtenOn": "2023-10-04T20:47:37Z",
      "side": 1,
      "message": "Sure thing.",
      "parentUuid": "2fe408ee_a2011328",
      "range": {
        "startLine": 176,
        "startChar": 8,
        "endLine": 190,
        "endChar": 9
      },
      "revId": "4f4345206082874f6ed646081cc6918c01efdad1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}